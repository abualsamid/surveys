var path = require('path')
var webpack = require('webpack')

var HtmlWebpackPlugin = require('html-webpack-plugin');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var CleanWebpackPlugin=require("clean-webpack-plugin");
var nodeEnv = process.env.NODE_ENV || 'development';
var CopyWebpackPlugin = require('copy-webpack-plugin');
var CommonsChunkPlugin = require("webpack/lib/optimize/CommonsChunkPlugin");

// https://github.com/coodoo/react-redux-isomorphic-example/blob/master/package.json

var plugins= [
  new webpack.optimize.OccurenceOrderPlugin(),
  new webpack.optimize.DedupePlugin(),
  new webpack.ProvidePlugin({
    'fetch': 'imports?this=>global!exports?global.fetch!whatwg-fetch'
  }),
  new webpack.optimize.UglifyJsPlugin({ // Optimize the JavaScript...
      compress: {
        warnings: false // ...but do not show warnings in the console (there is a lot of them)
      }
  }),
  new HtmlWebpackPlugin({
    title: "surveys",
    filename: "surveys.html",
    template: "./client/templates/index.ejs",
    inject: true,
    hash: true,
    chunks: ['common','surveys']
  }),
  new HtmlWebpackPlugin({
    title: "admin",
    filename: "admin.html",
    template: "./client/templates/admin.ejs",
    inject: true,
    hash: true,
    chunks: ['common','admin']
  }),
  // new HtmlWebpackPlugin({
  //   template: 'client/index.html', // Move the index.html file...
  //   minify: { // Minifying it while it is parsed
  //     removeComments: true,
  //     collapseWhitespace: true,
  //     removeRedundantAttributes: true,
  //     useShortDoctype: true,
  //     removeEmptyAttributes: true,
  //     removeStyleLinkTypeAttributes: true,
  //     keepClosingSlash: true,
  //     minifyJS: true,
  //     minifyCSS: true,
  //     minifyURLs: true
  //   },
  //   filename: "index.html",
  //   cache: true,
  //   inject: true // inject all files that are generated by webpack, e.g. bundle.js, main.css with the correct HTML tags
  // }),
  // new HtmlWebpackPlugin({
  //   template: "client/404.html",
  //   filename: "404.html",
  //   cache: true,
  //   index: true
  // }),

  new ExtractTextPlugin("/css/style.css"),
  new webpack.DefinePlugin({
    "process.env": {
      NODE_ENV: JSON.stringify(nodeEnv)
    }
  }),
  new CommonsChunkPlugin({
        filename: "/js/common.js",
        name: "common"
    }),

  new CopyWebpackPlugin([
    {from: 'client/static'},
  ])

];

  // plugins.push(new CleanWebpackPlugin([ path.join(__dirname, 'public')]))

module.exports = {
  plugins: plugins,
  target: "web",
  devtool: 'cheap-module-eval-source-map',
  entry: {
    surveys: './client/surveys.js',
    admin: './client/admin.js'
  },
  output: {
    path: path.join(__dirname, 'public'),
    filename: '/js/[name].bundle.js'
  },
  resolve: {
	  alias: {
	  },
	  // require() file without adding .jsx and .js .suffix
	  extensions: ['', '.js', '.jsx']
  },

  module: {
    loaders: [
      {
        test: /\.js?$/,
        loader: 'babel' ,
        exclude: /node_modules/,
        include: __dirname,
        query: {
          presets: [
            'babel-preset-es2015',
            'babel-preset-react',
            'babel-preset-stage-0'
          ].map(require.resolve),
        }
      },
      {
        test: /\.html$/,
        loader: "html"
      },
      { test: /\.css$/, loader: ExtractTextPlugin.extract("style-loader", "css-loader!postcss-loader") },
      {
        test: /\.(jpe?g|png|gif|ico)$/i,
        loader:'url-loader?limit=8000&name=images/[name].[ext]?[hash]'
      },
      { test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "url-loader?limit=8000&name=images/[name].[ext]?[hash]&mimetype=application/font-woff" },
      { test: /\.(ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader:'url-loader?limit=8000&name=images/[name].[ext]?[hash]'
      }
    ]
  }
}
